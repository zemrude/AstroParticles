


# Some Basic Concents and Notations

## Natural Units

In high energy physics and astro-particle physics it is very common to use the natural units where $\hbar = c = 1$. The correspondence between natural units and physical units can be established by use of

$$\hbar = 6.58 \times 10^{-16} {\;\mathrm{GeV}\cdot \mathrm{ ns}} = 1\;\Rightarrow 1\;\mathrm{GeV} = 1.52 \times 10^{15}\;{\mathrm{ns}^{-1}}$$


$$c = 30.0\;\mathrm{cm/ns} = 1 \Rightarrow 30\;\mathrm{cm} = 1\;\mathrm{ns}$$

In these units there is then only one fundamental dimension:

* Energy and momentum, usually expressed in GeV
* Time and space are GeV$^{-1}$


:::{.callout title="Tutorial I: Working with Units"}
 
Along these notes you are going to find different tutorials in `python` dealing with will help to develop your programing skills in and solve some numerical problems. In this case we are going to see an easy way to work with different units which is uing the module `units` that exist for example in [`astropy`](http://astropy.readthedocs.org/en/latest/units/):


```{python}
import astropy.units as u
from astropy import constants as const
from IPython.display import display, Markdown

M_Earth = 5.97E24 * u.kg
M_Sun = 1.99E30 * u.kg
M_MW  = 1E12 * M_Sun
#By adding the quantity u.kg you can print directly the mass in Kg
display(Markdown (f"Mass Earth is: {M_Earth}" %M_Earth))
```
Note that the variables defined above already have their units ``attached`` to them, so when you make a `print` or similar statement it will provide as well the units as a string. 

```{python}
R_Earth = 6.371E6 * u.m # meters
R_Sun = 6.955E8 * u.m # meters
AU = 1.496E11 * u.m # meters
```

We the radius we can calculate the mean density of Earth and Sun. We will show that units are preserved along calculations:

```{python}
import numpy as np
vol_sphere = lambda r: 4*np.pi/3*r**3
rho_Sun = M_Sun / vol_sphere(R_Sun)
rho_Earth = M_Earth / vol_sphere(R_Earth)

#A unit can be changed calling the .to(u.unit) method
display(Markdown (rf"$\rho_{{\oplus}}$ = {rho_Earth.to(u.g/u.cm**3):.2f}"))
display(Markdown (rf"$\rho_{{\odot}}$ = {rho_Sun:.2f}"))
```

We can use this module to make different transformations of uings, for example from light years to meters:


```{python}
ly = 1 * u.lyr

display(Markdown (f"Number of seconds for light to travel from Sun to Earth: {1./const.c.to(u.AU/u.s):.2e}"))
display(Markdown (f"Meters in a light year: {ly.to(u.m):.2e}"))
```

Assuming that the Galaxy is roughly a disk 50 kpc in diameter and 500 pc thick we can now calculate its density:


```{python}
V_Gal =  np.pi * (25000*u.pc)**2 * 500*u.pc

display(Markdown (f"Volume of the Milky Way is approximately: {V_Gal.to(u.m**3):.2e}"))
M_Gal = 1E12 * M_Sun
rho_Gal = M_Gal / V_Gal
display(Markdown (f"Average density of Milky Way is {rho_Gal.to(u.g/u.cm**3):.2e}"))
```
:::


## Larmor Radius and Rigidity

Larmor radius, or gyroradius, $r_L$, is the radius of the orbit of a charged particle moving in a uniform, perpendicular magnetic field, obtained by simply equating the Lorentz force with the centripetal force/

It is defined as:
$$q v B = \frac{mv^2}{r_L} \rightarrow r_L = \frac{p}{ZeB}$$

where $p$ has replaced $mv$ in the classical limit.  However, this also holds for the relativistic generalization by considering $p$ to be the relativistic 3-momentum. There are several adaptations of this formula, tuned to units natural to various scenarios. One such is

$$r_L \simeq  1 \;\mathrm{ kpc} \left(\frac{p}{10^{18}\;\mathrm{ eV}\cdot{c}}\right)\left(\frac{1}{Z}\right)\left(\frac{\mu\mathrm{ G}}{B}\right)$$

In cosmic ray physics, one often sees references in the literature to the **rigidity** of a particle, defined as:

$$
R \equiv r_L B c = \frac{pc}{Ze}
$$

note that the rigidity, $R$ has units of Volts.


## Superposition Model

Another concept that we will use frecuently in cosmic-ray physics is the *superpositoin model*. In the superposition model, a nucleus with mass $A$ and energy $E(A)$ is considered as $A$ independent nucleons with energy $E_0$. In a spallation process the energy per nucleon is approximately cosnserved therefore:


$$A + p \rightarrow A_1 + A_2$$


$$\begin{alignedat}{2}
&E(A) &= &A E_0,\\
&E(A_1) &= &A_1 E_0,\\
&E(A_2) &= &A_2 E_0
\end{alignedat}$$

## Cross sections, number density, lifetime, and interaction lengths

The **cross-section** of a reaction is a very important parameter. It can be considered as the effective area for a collision between a target and a projectile. The cross-section of an interaction depends on interaction force, the energy of the particle, etc...

Cross-section is typically measured in surface, $\mathrm{cm}^2$ or "barns":

$$ 1 \mathrm{ barn} = 10^{-24} \mathrm{cm}^2$$

The unit barn comes from the expression "big as a barn" as in the past physisits saw with surprise that interactions were more frequent than expected, and they thought the nucleus was in fact bigger than they thought... big as a barn.

If a flux of *projectile* particles are crossing a volume of *target* particles with cross section $\sigma_N$ then the disapperance of flux  will be proportional to the initial number, the length travelled and number of target particles:

$$ \mathrm{d} I = -I n \sigma_N \mathrm{d} x $$

where $n$ is the **number density**, ie, the number of particles per volume unit:

$$ n = \frac{N}{V} $$

note that the number density is related with the mass density as:

$$n = \frac{N_A}{M} \rho_m = \frac{\rho_m}{m_N}$$

where $N_A$ is the avogadro number, $M$ is the total mass of a mol and $m_N$ is the mass of is the mass of a single particles N making up the volume. Solving the equation above we have:

$$I = I_0 e^{-\frac{x}{n\sigma_N}}$$

where we can define:

$$\lambda = \frac{1}{n\sigma_N}$$

as the **interaction length**. Likewise if projectile particles are travelling at speed $v$, the length travelled can be expressed as $\mathrm{d}x = v \mathrm{d} t$ giving a similar expression with a time constant:

$$\tau = \frac{1}{n v\sigma_N}$$

Known as the **lifetime**. If several processes are taking place, we need to replace $n\sigma_N$ as $\sum n_i\sigma_i$, which gives:

$$\frac{1}{\tau_{total}} = \frac{1}{\tau_1} + \frac{1}{\tau_2} + ... + \frac{1}{\tau_n}$$

